name: Build and Test
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Install ICU (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libicu-dev

      - name: Install ICU (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install icu4c

      - name: Setup vcpkg (Windows)
        if: matrix.os == 'windows-latest'
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: '501db0f17ef6df184fcdbfbe0f87cde2313b6ab1'
          runVcpkgInstall: true

      - name: Install ICU (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          ${{ github.workspace }}/vcpkg/vcpkg install icu:x64-windows
          echo "${{ github.workspace }}/vcpkg/installed/x64-windows/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set VCPKG_ROOT (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "VCPKG_ROOT=${{ github.workspace }}/vcpkg" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install pgrx
        run: |
          cargo install --locked cargo-pgrx || true
          cargo pgrx init

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy --all -- -D warnings

      - name: Build Extension
        run: cargo pgrx package
        env:
          ICU_VERSION: 74
          VCPKGRS_DYNAMIC: 1

      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pg_sqids-${{ runner.os }}
          path: |
            target/release/libpg_sqids.so
            target/release/libpg_sqids.dylib
            target/release/pg_sqids.dll

      - name: Test
        run: cargo test --all

  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install ICU
        run: sudo apt-get install -y libicu-dev